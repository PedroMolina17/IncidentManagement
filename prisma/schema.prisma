// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model typeusers {
  type_user_id Int     @id @default(autoincrement())
  description  String
  users        users[]
}

model users {
  user_id      Int        @id @default(autoincrement())
  username     String
  email        String     @unique()
  password     String
  typeusers    typeusers? @relation(fields: [type_user_id], references: [type_user_id])
  type_user_id Int?
  room         room?      @relation(fields: [room_id], references: [room_id])
  room_id      Int?
}

model room {
  room_id   Int         @id @default(autoincrement())
  name      String      @unique
  users     users[]
  incidents incidents[]
}

model incidents {
  incidents_id      Int             @id @default(autoincrement())
  title             String
  description       String
  date              DateTime        @default(now())
  status            status?         @relation(fields: [status_id], references: [status_id])
  status_id         Int?
  type_incidents    type_incidents? @relation(fields: [type_incidents_id], references: [type_incidents_id])
  type_incidents_id Int?
  room              room?           @relation(fields: [room_id], references: [room_id])
  room_id           Int?
  image_cover       image_cover[]
}

model image_cover {
  image_cover_id    Int                 @id @default(autoincrement())
  img_url           String
  description       String
  incidents         incidents?          @relation(fields: [incidents_id], references: [incidents_id])
  incidents_id      Int?
  image_description image_description[]

  @@unique([incidents_id])
}

model image_description {
  image_description_id Int          @id @default(autoincrement())
  img_url              String
  description          String
  image_cover          image_cover? @relation(fields: [image_cover_id], references: [image_cover_id])
  image_cover_id       Int?
}

model status {
  status_id   Int         @id @default(autoincrement())
  description String      @unique
  incidents   incidents[]
}

model type_incidents {
  type_incidents_id Int         @id @default(autoincrement())
  description       String
  incidents         incidents[]
}
